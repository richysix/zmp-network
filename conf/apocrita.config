profiles {
    apocrita {
        params {
            max_memory = 362.GB
            max_cpus   = 32
            max_time   = 240.h
        }
        executor {
            name            = 'sge'
            submitRateLimit = '5 sec'
        }
        apptainer.runOptions = "-B /data"
        process {
            penv           = 'smp'
            clusterOptions = { "-S /bin/bash -l h_vmem=${(task.memory.mega / task.cpus)}M" }
            errorStrategy  = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
            maxRetries     = 1

            cpus   = { check_max( 1,                                'cpus'   ) }
            memory = { check_max( task.attempt == 1 ? 6.GB : 12.GB,  'memory' ) }
            time   = { check_max( task.attempt == 1 ? 1.h  : 240.h, 'time'   ) }
            withLabel:process_single {
                memory = { check_max( task.attempt == 1 ? 1.GB : 2.GB,  'memory' ) }
                time   = { check_max( task.attempt == 1 ? 1.h   : 240.h, 'time'   ) }
            }
            withLabel:process_low {
                memory = { check_max( task.attempt == 1 ? 2.GB : 4.GB,  'memory' ) }
                time   = { check_max( task.attempt == 1 ? 1.h   : 240.h, 'time'   ) }
            }
            withLabel:process_medium {
                memory = { check_max( task.attempt == 1 ? 8.GB : 12.GB,  'memory' ) }
                time   = { check_max( task.attempt == 1 ? 1.h   : 240.h, 'time'   ) }
            }
            withLabel:process_high {
                memory = { check_max( task.attempt == 1 ? 16.GB : 32.GB,  'memory' ) }
                time   = { check_max( task.attempt == 1 ? 1.h   : 240.h, 'time'   ) }
            }
            withLabel:process_long {
                time   = { check_max( 240.h,                             'time'   ) }
            }
            withLabel:process_high_memory {
                memory = { check_max( task.attempt >  1 ? 96.GB : 64.GB, 'memory' ) }
            }
        }
    }
}
